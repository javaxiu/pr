(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{338:function(n,t,o){"use strict";o.r(t);var v=o(14),_=Object(v.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"所思-经验有什么用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#所思-经验有什么用"}},[n._v("#")]),n._v(" 所思 - 经验有什么用")]),n._v(" "),t("p",[n._v("最近在我们圈子里经常在讨论一个问题：经验到底是什么？\n背景是这样的，我们最近入职了一个刚毕业的 99 年的小伙子，能力非常强，强到什么程度呢？用我们一位同事的话来说，“开箱即用”，意思是无需太多指导，把他当 p6 直接用来投入到某个业务线是完全没问题的。然后我们某次吃饭就聊到这个话题：现在的年轻人很强，我们当年吭哧吭哧从 js 从 ie6 爬过来，人家现在根本不需要懂这些也可以干得很好。就算你非要让人家学，也可以很快掌握，所以我们总说招聘 p6 要求是 3年以上的工作经验到底是为什么？还是说这个行业在掩盖什么？总之就是对我们的“工作经验”产生了怀疑。\n最近相信不少人都看了逍遥子在内网发的贴子，反思了这些年阿里内部的问题。其中讲到了两件事，第一件是阿里的老员工问题，说白了就是既得利益者怠政和视野狭隘，给年轻人带来的阻碍大于指导；另一件事是中台策略的反思，因对抗拼多多诞生的淘宝特价版，在面对快跑争取市场的时候，中台，这个本应该面对快速迭代的产品提供强力后援的储备，没能给出有效的帮助，最终特价版完全是从 0 开始的。而最近拼多多等产品的崛起，也让市场和各种公司明白，中台并非建成产品的捷径。\n我曾旗帜鲜明的反对脱产空手造中台的思想，我认为中台应该是路，世上本没有路，走的人多了就有路了，让“走路”这件事情越来越简单，"),t("strong",[n._v("本质上的思路是经验的沉淀")]),n._v("，形成工具。而空手造中台则是另一种思路：基于“经验丰富的人”提的框架按照既有经验铺设出来，**这本质上是过往经验的具象化。**现在忽然明白，这两者其实没有多大的本质区别，无非一个是“边下边看”还是“下完再看”，前者合适小团队，后者合适大团队。")]),n._v(" "),t("p",[n._v("人类有历史，而动物没有，这就是我们的强大之处，因为我们会学习历史的经验。而职业老员工、中台，都是经验的具象化产物。网上有句话却又反对这个观点，也是我非常喜欢的：人类会进步，是因为年轻人不听老人话。   \n经验就是我时常比喻的路，小公司的小马路，大公司的高铁，但要命的是，高铁你要买票、候车、还不能直达目的地。所以逍遥子说“今天我们很容易变成正规军，而别人是游击队，这很要命”。今天市场在快速迭代，套路化的东西越来越少，甚至很多人在热衷于打破套路。")]),n._v(" "),t("p",[n._v("思考这些事情有什么用呢？是说两个场景。")]),n._v(" "),t("p",[t("strong",[n._v("如何做好一个业务")]),n._v("\n以往在大中台小前端的背景下，很多业务在设计之初就有一定的产品框架约束，以至于发挥空间会有一定限制。区别在于有些产品思考本就不大，因此并没有感受到框架边界。中台的设计目标是在于防止低水平的重复建设的以实现加速业务，那么如果业务触碰到了中台的边界，拖慢了速度，不用它反而跑得更快。那是不是高水准的重复建设如果能赢得时间赢得市场，那确实无妨。问题就在于人们太“懒”了，看到两行一样的代码就要想办法抽象，看到两个一样的业务就看到了造中台的 kpi。这个“懒”说的就是思维定势上对于经验的依赖。\n说白了，中台的价值就是工具，能用则用，不必削足适履。我对于中台的理解，现在更倾向于小而美的工具箱。什么叫小而美？当然不是各种无机代码库，而是服务化的技术产品，比如 UIPaaS、比如生物识别、比如大数据分析、比如模型算法。")]),n._v(" "),t("p",[t("strong",[n._v("如何做一个好的 TL")]),n._v("\n以前在国企的时候当过讲师，也带过新人，深感自己不合适当TL，因为我很多时候教别人各种基础技术，别人要么听不懂要么不想听。现在反思起来，大概是因为初中的时候学习成绩好，教别人都是从公式推导开始教，然后还乐于在教别人的时候自己反复复习，很享受这种感觉，说白了就是好为人师。可是工作中就是教不动，于是产生了挫败感。近两年我换了几任主管，很庆幸遇到的主管都非常棒。想分别聊一下他们给我很有启发的几件事。\n一、程序员最害怕的接手烂摊子，然后他就带我分析，为什么烂，到底烂在哪儿，而不是吐槽骂娘。一顿操作之后把所有程序逻辑梳理清楚，烂的地方列出来 todo，然后随着每次功能迭代删改，逐渐的然后发现好像也不是这么烂了。\n二、第一个死结打开之后，再去思考改进的方案，然后主管让我思考和设计下一代技术方案，这是我自认为比较拿手的事情。这件事我从入职不久就一直在思考的，但是一直没机会下手，毕竟业务不会等，也不能等。在对的时间做了最擅长的事，那段时间我是职业幸福指数最高的时间。而后来我也凭借这件事顺利晋升到下一个职级。\n三、去年我的主管给打绩效的时候，给我的一个评价对我影响非常大：“你很像xxx，他很聪明，能3年从 p5 晋升到 p7，你愿意折腾而且技术很好，但是现在缺少的是推动力执行力”让我很惊讶的是，他刚成为我主管不到3个月，就能把我分析的这么清楚。我不知道这背后是否有类似星座占扑一样说写摸棱两可的话，让你觉得好像说的就是你，但是他这个评价确实一针见血指出了我的问题\n以上三件事，分别对应了三种 TL 的经验：带人梳理问题、发挥人之所长、识人之所短。而且做事情都非说教指导，而是起到"),t("strong",[n._v("带路、激发热情、侧击缺点")]),n._v("的作用\n所以一个好的 TL，首先一定不是把成长经验生搬硬套“教”给别人。TL 是 Team Leader，不是 Team Manager，经验是用在协助解决问题顺便引人思考的，是用来识人断事的\n说白了，这就是老炮的价值")]),n._v(" "),t("p",[t("strong",[n._v("一点总结")]),n._v("\n最近很热门的一个词汇叫做 “Know How”，援引一下网上的一段话：")]),n._v(" "),t("blockquote",[t("p",[n._v("通过深度学习的方式教人工智能如何辨别一种恶性肿瘤，在用了近13万张图片训练机器正确识别病变之后，结果是在每次测试中，机器的算法都优于专业的皮肤科医师。但他特别提到了人工智能和人类医生诊断的区别，他借鉴了英国哲学家Gilbert的观点，认为人工智能所掌握的应该叫“Know what知道是什么”，而拥有几十年经验的人类医师掌握的才叫“Know how知道怎么做”。")])]),n._v(" "),t("p",[n._v("很多我们今天看到的事情，其实只需要 know what 就够了，比如万有引力，比如电气、比如计算机运行原理，这些东西只要知其然。而相对应的，如果我们想要在专业领域中成为杰出的人，则需要 know how。业务领域需要知道业务领域模型设计经验而非业务中台既定的形态，TL 需要坚守看问题的思维经验而非禁锢下属的思路。")])])}),[],!1,null,null,null);t.default=_.exports}}]);