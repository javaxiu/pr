(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{328:function(a,t,r){"use strict";r.r(t);var e=r(14),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"figma导出代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#figma导出代码"}},[a._v("#")]),a._v(" figma导出代码")]),a._v(" "),t("h2",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),t("p",[a._v("继续之前的相对布局"),t("a",{attrs:{href:"https://iwiki.woa.com/pages/viewpage.action?pageId=4007703570",target:"_blank",rel:"noopener noreferrer"}},[a._v("调研"),t("OutboundLink")],1),a._v("，发现设计稿通常有些设计师意图一般不能完整在 figma 上表达出来，导致部分信息失真，通过 figma 再二次导出就会放大这部分的差异。例如以下场景：")]),a._v(" "),t("h4",{attrs:{id:"场景1-图层结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景1-图层结构"}},[a._v("#")]),a._v(" 场景1  图层结构")]),a._v(" "),t("p",[a._v("设计师为了绘制一个带阴影的卡片，会先绘制一个 Group，然后放入一个矩形，给矩形增加阴影。然后再单独建一个分组，放入文字等。而前端实现通常就是一个 div+内容，不会额外再写一个带阴影的 div")]),a._v(" "),t("p",[a._v("导致的问题：如果希望内容超出隐藏，那么 Group626054 这层加上了 overflow:hidden，那么阴影也会被切掉不显示出来")]),a._v(" "),t("h4",{attrs:{id:"场景2-实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景2-实现方式"}},[a._v("#")]),a._v(" 场景2  实现方式")]),a._v(" "),t("p",[a._v("某些场景下设计师为了实现镜像效果，例如左图右文到左文右图，会通过将容器先做 180 度旋转，然后对每个子内容再做 180 度旋转")]),a._v(" "),t("p",[a._v("导致的问题：如果完全按照设计稿实现，就多了两次没有必要的 transform: rotate，是没有必要的渲染开销。而且对后续维护不利（比如要增加左边距，你可能要加的实际上得写右边距）")]),a._v(" "),t("h4",{attrs:{id:"场景3-尺寸大小"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景3-尺寸大小"}},[a._v("#")]),a._v(" 场景3 尺寸大小")]),a._v(" "),t("p",[a._v("表达意图问题，例如下图，设计师绘制的这个文字框是固定的 215px ，设计师想表达的实际上是这个文字左右边距 20px，中间撑满，但是因为 figma 没有表达这个意图的操作（一般设计工具都不会有这种表达方式）。但是同样的这种固定了宽度的元素，有些就是想要定宽，如图2。 图中还有封面图片与容器都是 255px，设计师想表达的应该是图片 100% 宽度，但是解析图片时应该如何理解到这一点？\n文字高度是48px，设计师想要的是固定48px+超出隐藏，还是动态拉伸")]),a._v(" "),t("h4",{attrs:{id:"场景4-实现过程问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景4-实现过程问题"}},[a._v("#")]),a._v(" 场景4 实现过程问题")]),a._v(" "),t("p",[a._v("如下图，设计师一开始绘制的是图1，后来因为改视觉稿改成了2，设计师是简单做一次旋转放过去的，和上面问题一样，实现起来可能会影响它后面的文字排版")]),a._v(" "),t("h4",{attrs:{id:"场景5-相对位置问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景5-相对位置问题"}},[a._v("#")]),a._v(" 场景5 相对位置问题")]),a._v(" "),t("p",[a._v("如下图1，这个门票信息的矩形区域，通过 api 所能拿到的信息就是这些，如何根据这个信息推测出来 css 应该需要的 左右边距（padding/margin）\n图2 是基于绝对定位，三个文字是并列的图层，要实现第一行门票类型+价格在同一行，我们必须单独为其分组\n这个问题在相对布局的场景下会好很多，切换到 figma 相对布局模式时，Figma 会自动按照位置关系计算出来最佳的位置，此时拿到的 x(top)、y(left) 值 都会是0")]),a._v(" "),t("h4",{attrs:{id:"场景6-svg图层-图片图层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景6-svg图层-图片图层"}},[a._v("#")]),a._v(" 场景6 svg图层 / 图片图层")]),a._v(" "),t("p",[a._v("如下图1，文字左右的图片标记，在这里设计师是直接在稿子上画出来左右各一组的图层组，每一组分别是2个选准45度的矩形+一个填充了线性渐变的矩形来达到效果。\n如下图2，一个门票的背景图层，是通过多个圆形的裁剪(clip)、叠加（blendMode）、渐变等组合形成，这些在网页环境不一定能完全实现，而且也没太大必要性，这些图层通常直接混合导出成一张图片即可")]),a._v(" "),t("h4",{attrs:{id:"场景7-图层顺序问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景7-图层顺序问题"}},[a._v("#")]),a._v(" 场景7 图层顺序问题")]),a._v(" "),t("p",[a._v("如下图，正常解析出来一些子图层，我们会作为瀑布流直接从上往下排列，但是由于设计稿无需考虑此问题，图层顺序本身不代表它真实的排列顺序，而是一些 x+y 的绝对布局。除此之外，margin/padding 也无法直接识别出来，需要经过一些计算。例如图层1 y: 10, height: 20, 图层2 是 y: 35, 那么应该推断出来 marginTop 是5.  这个问题在 auto-layout 场景下会好很多，但是相对位置的优化还需考虑")]),a._v(" "),t("h2",{attrs:{id:"整体方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整体方案"}},[a._v("#")]),a._v(" 整体方案")]),a._v(" "),t("h3",{attrs:{id:"完整思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完整思路"}},[a._v("#")]),a._v(" 完整思路")]),a._v(" "),t("p",[a._v("基于上面的几种场景分析，一份 figma 如果要在不经过图像识别/大数据分析的情况下，仅依靠图层来识别出来正确的关系，那么必须有以下几个前提（约定）必须遵循：")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("对设计师要求")]),a._v("：设计师画稿时应该默认使用相对布局，如果有图层层叠的情况，才考虑不开启相对布局")]),a._v(" "),t("li",[t("strong",[a._v("对设计师要求")]),a._v("：尽量不要使用旋转等变形方式达到特定排版效果，以保证最终效果是最佳实现方式")]),a._v(" "),t("li",[t("strong",[a._v("对前端要求")]),a._v("：review 设计稿，标注出来一些需要转化成 svg / 图片的图层组，通过名称上增加一些特殊标记，例如 #svg#、#png#、#jpg#，让识别脚本可以直接将图层转化为图片而不是继续深度遍历")]),a._v(" "),t("li",[t("strong",[a._v("对前端要求")]),a._v("：对于导出产物，有些地方并非完全符合设计师意图，因为设计师意图在通过 figma 输出时已经有损失，例如场景3、4、5，所以需要有一次二次编辑，将导出 json-schema 导入到低代码编辑器中进行二次调整")])]),a._v(" "),t("p",[a._v("完整操作流程：")]),a._v(" "),t("ol",[t("li",[a._v("figma 根据图层结构，提取图层尺寸样式")]),a._v(" "),t("li",[a._v("使用 figma api 将部分图层导出为图片、svg等")]),a._v(" "),t("li",[a._v("json+图片导入到低代码编辑器，二次编辑")]),a._v(" "),t("li",[a._v("低代码编辑器增加更多设置器，方便二次编辑")]),a._v(" "),t("li",[a._v("低代码编辑器出码，将 json-schema 编码成 react (vue/html/小程序)")])]),a._v(" "),t("h3",{attrs:{id:"实现过程及进展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现过程及进展"}},[a._v("#")]),a._v(" 实现过程及进展")]),a._v(" "),t("p",[a._v("demo 体验**（目前对应脚本、可视化编辑器新版等尚未发布到 CDN 环境，demo 暂时还不能体验，可以看如下图效果：）**")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("把这个拖到 Chrome 书签栏 Figma解析。")]),a._v(" "),t("ol",[t("li",[a._v("拖不过去就手动建一个书签，url 内容填 javascript: void (function () {const s = document.createElement('script');s.setAttribute('crossorigin', 'anonymous');s.setAttribute('async', true);s.onload = () => setTimeout(() => s.remove(), 2000);s.src = '"),t("a",{attrs:{href:"https://www.figma.com/esbuild-artifacts/local/convert.js?%27+Date.now()%27;document.body.appendChild(s);%7D",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.figma.com/esbuild-artifacts/local/convert.js?%27+Date.now()';document.body.appendChild(s);})()"),t("OutboundLink")],1),a._v("());")]),a._v(" "),t("li",[a._v("在 whistle 上配置这条规则 "),t("a",{attrs:{href:"https://www.figma.com/esbuild-artifacts/local/convert.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.figma.com/esbuild-artifacts/local/convert.js"),t("OutboundLink")],1),t("a",{attrs:{href:"https://cdn-go.woa.com/jiawenliang/ep-canvas/latest/figma-convert.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://cdn-go.woa.com/jiawenliang/ep-canvas/latest/figma-convert.js"),t("OutboundLink")],1)])])]),a._v(" "),t("li",[t("p",[a._v("新建一个 figma 文档，从现有 figma 视觉稿复制一个 Frame 到画布上，手动给图层设置为 auto layout（可能会导致设计稿错乱）、给需要导出为 svg 的图层打标")]),a._v(" "),t("ol",[t("li",[a._v("如果不想建或者想要个快速体验的，可以用这个 "),t("a",{attrs:{href:"https://www.figma.com/file/ZluQGVFz0BZ8mLOFSC0JZk/transform-demo?type=design&node-id=23-3&t=ErBb2LHbkPn4AilZ-0",target:"_blank",rel:"noopener noreferrer"}},[a._v("Figma 文件"),t("OutboundLink")],1),a._v("， 估计要找我开个权限")])])]),a._v(" "),t("li",[t("p",[a._v("点击书签栏的 Figma 解析，会自动跳转到编辑器上并自动加载解析成功的数据。（如果未自动加载，不要关闭打开的窗口，返回 figma 再点击一次书签）")])]),a._v(" "),t("li",[t("p",[a._v("**点击解析\n**")])]),a._v(" "),t("li",[t("p",[a._v("**得到结果，可再次微调内容\n**")])])]),a._v(" "),t("h3",{attrs:{id:"待完善-wip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#待完善-wip"}},[a._v("#")]),a._v(" 待完善（WIP）")]),a._v(" "),t("ul",[t("li",[a._v("✅ demo 完善，发布到 CDN 环境供体验")]),a._v(" "),t("li",[a._v("识别部分：多余图层优化，例如"),t("strong",[a._v("场景1")]),a._v(" 的问题，减少一些不必要图层，但是这个只能是发现一个场景针对一个场景优化，可能会是个无底洞")]),a._v(" "),t("li",[a._v("识别部分：图层位置关系优化，例如"),t("strong",[a._v("场景7")])]),a._v(" "),t("li",[a._v("二次编辑：需要继续优化编辑器使用体验，目前看，使用者应该是前端开发，应该在样式设置器上进一步优化使用体验")]),a._v(" "),t("li",[a._v("✅ 二次编辑出码：目前还没实现，需要解决：react 生成（目前是动态渲染）、css 导出为 css 文件（目前是 inline-style)")]),a._v(" "),t("li",[a._v("二次编辑：响应式能力，目前设计稿尺寸上是按照 1920 屏实现，没有自适应能力，会出现屏幕溢出，（可能会参考 rem 的实现方式）")])]),a._v(" "),t("h3",{attrs:{id:"demo-截图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-截图"}},[a._v("#")]),a._v(" Demo 截图")]),a._v(" "),t("h3",{attrs:{id:"demo-体验视频"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-体验视频"}},[a._v("#")]),a._v(" Demo 体验视频")])])}),[],!1,null,null,null);t.default=s.exports}}]);