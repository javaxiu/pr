(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{310:function(e,t,r){"use strict";r.r(t);var n=r(14),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"win7兼容性调研"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#win7兼容性调研"}},[e._v("#")]),e._v(" win7兼容性调研")]),e._v(" "),t("h2",{attrs:{id:"问题背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题背景"}},[e._v("#")]),e._v(" 问题背景")]),e._v(" "),t("p",[e._v("从 Electron6.0 开始，部分 win7 系统⽆法直接运⾏，表现为启动后界⾯⿊屏，在进程监视器中观察发 现 Electron 的⼀个 GPU render 进程持续崩溃。 ⽽ Electron⽬前最新⽀持的版本为 8.x 9.x 10.x 和 11.x-beta，官⽅只会维护更新最新三个版本+⼀ 个 beta 版本，6.x 以下的版本已经不维护，可能会出现各种安全漏洞和新 feature 兼容问题，基于它构 建的应⽤都应该需要考虑及时跟进。")]),e._v(" "),t("h2",{attrs:{id:"electron-官方说法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron-官方说法"}},[e._v("#")]),e._v(" Electron 官⽅说法")]),e._v(" "),t("p",[e._v("issue 讨论区有反馈 Electron6 开始出现 win7 不兼容问题，官⽅推荐做法是安\n装 .net framework 4.7.1 ，⽽ win7(⾮sp1) 不⽀持安装 4.7.1 ，最⾼⽀持 4.6.2\n补充说明 .Net Framework 运⾏环境")]),e._v(" "),t("ul",[t("li",[e._v("windows 7 ⽀持的 .net framework 为 3.5 、4.0 、4.5、4.5.1、4.5.2。")]),e._v(" "),t("li",[e._v("windows sp1 ⽀持 .net framework 为 4.6、4.6.2、4.7\n"),t("a",{attrs:{href:"https://support.microsoft.com/en-us/help/4019990/update-for-the-d3dcompiler-47-dllcomponent-on-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://support.microsoft.com/en-us/help/4019990/update-for-the-d3dcompiler-47-dllcomponent-on-windows"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048100759-16e7559c-d89c-4b5f-a239-5862020d6c8c.png",alt:"image.png"}})]),e._v(" "),t("h2",{attrs:{id:"vscode-运行情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-运行情况"}},[e._v("#")]),e._v(" Vscode 运⾏情况")]),e._v(" "),t("p",[e._v("vscode 也是基于 Electron 开发的，⽬前最新版本是基于 Electron 13.5.2 版本")]),e._v(" "),t("h3",{attrs:{id:"vscode-的electron-版本和发布时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-的electron-版本和发布时间"}},[e._v("#")]),e._v(" vscode 的Electron 版本和发布时间")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("vscode 版本electron 版本发布⽇期")]),e._v(" "),t("th",[e._v("vscode 版本electron 版本发布⽇期")]),e._v(" "),t("th",[e._v("vscode 版本electron 版本发布⽇期")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1.27 2.0 2018.08")]),e._v(" "),t("td",[e._v("1.27 2.0 2018.08")]),e._v(" "),t("td",[e._v("1.27 2.0 2018.08")])]),e._v(" "),t("tr",[t("td",[e._v("1.36 4.0 2019.07")]),e._v(" "),t("td",[e._v("1.36 4.0 2019.07")]),e._v(" "),t("td",[e._v("1.36 4.0 2019.07")])]),e._v(" "),t("tr",[t("td",[e._v("1.40 6.0 2019.10")]),e._v(" "),t("td",[e._v("1.40 6.0 2019.10")]),e._v(" "),t("td",[e._v("1.40 6.0 2019.10")])]),e._v(" "),t("tr",[t("td",[e._v("1.43 7.0 2020.02")]),e._v(" "),t("td",[e._v("1.43 7.0 2020.02")]),e._v(" "),t("td",[e._v("1.43 7.0 2020.02")])]),e._v(" "),t("tr",[t("td",[e._v("1.49 9.0 2020.08")]),e._v(" "),t("td",[e._v("1.49 9.0 2020.08")]),e._v(" "),t("td",[e._v("1.49 9.0 2020.08")])])])]),e._v(" "),t("p",[e._v("简单做了 Electron 9.2.1 的运⾏测试\nwindows7 + .net framework 4.5.2 测试结果：⿊屏，且GPU渲染进程持续崩溃\n"),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048201279-3212db82-6188-4924-8d79-99127bff831c.png",alt:"image.png"}}),e._v(" "),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048209491-14b43edb-9861-43ee-a809-fb9575a01453.png",alt:"image.png"}}),e._v(" "),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048218314-c3210e18-695d-4257-b0fa-a476a73b974f.png",alt:"image.png"}}),e._v("\n通过进程监视器可以很清楚看到，反复崩溃⼜重新唤起的时⼀个 gpu 渲染进程，这就是 Electron 能启\n动，但是窗⼝时⿊⾊端原因\nvscode 从 1.40 版本开始使⽤了⾼于 Electron6 以上的版本，后续 有⼈提出了相关的 issue， 从此之\n后，vscdoe 官⽹开始贴出如下这样⼀段系统环境要求。（⽽以前只是简单的写 windows7,8,10）\n但是实测，安装了 .net framework 4.5.2（其他 .net 版本的也都测试过了） 仍然是⿊屏，看到GPU渲染\n进程⼀直在崩溃（vscode 1.50 和 Electron 9.2.1 官⽅包都是）")]),e._v(" "),t("h2",{attrs:{id:"electron-9-2-1-在-win7-成功运行方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron-9-2-1-在-win7-成功运行方法"}},[e._v("#")]),e._v(" Electron 9.2.1 在 win7 成功运⾏⽅法")]),e._v(" "),t("p",[e._v("在对⽐ Vscode 和 Electron 版本的时候，⽂件有⼩⽐例的⼤⼩差异是可以忽略的，因为 windows 签名\n会略增⼤⽂件尺⼨，但是发现⾥⾯的 d3dcompiler_47.dll 这个⽂件的差异尤其⼤。\n"),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048255088-ee4e3642-d343-4b61-8fe3-bfb786d908ec.png",alt:"image.png"}}),e._v("\n尝试把 Electron5.0 版本⾥的 d3dcompiler_47.dll 覆盖到 Electron 9.2.1 , 发现可以正常运⾏，并且进\n程监视器中不再看到 GPU 进程崩溃现象\n"),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048283363-2ee9a932-edce-47cf-a024-b68836935c62.png",alt:"image.png"}}),e._v("\n但是在 vscode ⾥把 electron 5.0 的 d3dcompiler.dll 直接替换掉这个⽂件不⾏，现象仍然时反复崩溃\n"),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048299233-51a059fc-732d-4a8a-9ee4-a7802f0d3f2c.png",alt:"image.png"}}),e._v("\n猜测是跟版本签名有关系导致 vscode 1.50 不认拷⻉进去 d3dcompiler ⽂件，于是我在⾃⼰的机器上同\n时安装了两个版本的 vscode 1.50 (electron9.2.1) 和 1.27(electron 2.0.7)，两个分别运⾏，前者⿊屏，\n后者能正常运⾏（证明安装过程中vscode并没有给系统附加什么注册⽂件之类端影响到运⾏效果）。\n然后把后者⽂件夹下的 d3dcompiler.dll ⽂件复制替换到 1.50 的版本⾥，发现 1.50 版本也能正常运⾏\n了\n"),t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048317875-3ca889fa-d75b-49bb-aaf7-c7ac1fd758b2.png",alt:"image.png"}}),e._v("\n回过来查了 Electron 的相关 issue，发现有类似的说法：\nhttps://github.com/electron/electron/issues/24434，概括⼀下起来是两个处理办法：")]),e._v(" "),t("ul",[t("li",[e._v("chrome 83 版本中的 d3dcompile  ⽂件替换到Electron根⽬录")]),e._v(" "),t("li",[e._v("在 node 端使⽤这个 api 禁⽤掉 GPU 渲染加速 app.commandLine.appendSwitch('disablegpu')")])]),e._v(" "),t("h2",{attrs:{id:"⻜书-最新版-3-32-3-3-32-3-399"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⻜书-最新版-3-32-3-3-32-3-399"}},[e._v("#")]),e._v(" ⻜书(最新版 3.32.3 (3.32.3.399))")]),e._v(" "),t("p",[e._v("⻜书也是基于 Electron 构建的桌⾯应⽤，包含 Mac + Windows 双端\n在 win7(⾮sp1、⽆.net framework) 下可以正常运⾏，检查发现 Electron 版本是 5.0.0。\n（mac 和 windows 都是 electron 5.0.0）")]),e._v(" "),t("ul",[t("li",[e._v("windows 版本")])]),e._v(" "),t("p",[t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048389420-248dedf5-e399-4dd0-b30a-8bf90b8f0a6a.png",alt:"image.png"}})]),e._v(" "),t("ul",[t("li",[e._v("mac 版本")])]),e._v(" "),t("p",[t("img",{attrs:{src:"/pr//yuque/0/2021/png/139763/1637048406561-5e85c8ad-e8b3-4087-87ee-dc03fc4d501c.png",alt:"image.png"}})]),e._v(" "),t("h2",{attrs:{id:"关于-d3dcompiler-dll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于-d3dcompiler-dll"}},[e._v("#")]),e._v(" 关于 d3dcompiler.dll")]),e._v(" "),t("p",[e._v("查阅相关的资料了解到这个⽂件是⽤于画⾯渲染的，⼀般中视频、游戏等与 GPU 加速相关的场景下使\n⽤。\n⽽win7 到 win7 sp1 的⼀个变化就是 DirectX 版本的差异，(从 DirectX 10 升级到 DirectX 11）")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("ul",[t("li",[e._v("⽬前官⽅ Electron6.0 以上是不⽀持 windows7 的，最低也需要 windows7 sp1 + .net framework 的环境")]),e._v(" "),t("li",[e._v("Windows7 运⾏ 9.3.2 的 Electron 是有可能的\n"),t("ul",[t("li",[e._v("通过替换 d3dcompiler_47.dll ⽂件解决")]),e._v(" "),t("li",[e._v("通过 Electron 端启动的时候加禁⽤ GPU 加速解决，另外正在想办法 debug 或者看⽇志，找找 d3dcompiler 加载失败的原因，更有针对性解决问题。")])])])]),e._v(" "),t("p",[e._v("有新的发现会持续更新本⽂")])])}),[],!1,null,null,null);t.default=a.exports}}]);