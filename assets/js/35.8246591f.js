(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{314:function(a,t,e){"use strict";e.r(t);var r=e(14),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"他山-framer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#他山-framer"}},[a._v("#")]),a._v(" 他山 - Framer")]),a._v(" "),t("h2",{attrs:{id:"是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[a._v("#")]),a._v(" 是什么")]),a._v(" "),t("p",[a._v("社区里做动画设计很出名的一个可视化编辑器，"),t("a",{attrs:{href:"https://www.framer.com/templates/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.framer.com/templates/"),t("OutboundLink")],1),a._v("，它是一个技术开源、产品付费的产品，主打丰富的动画特效，可以在 "),t("a",{attrs:{href:"https://www.framer.com/developers/handshake/",target:"_blank",rel:"noopener noreferrer"}},[a._v("api"),t("OutboundLink")],1),a._v(" 环境搭配好一个动效之后拷贝为代码。它大概长这样\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662362152038-981521c9-d539-4b3b-afe6-c34e5fb57d5e.png",alt:"image.png"}})]),a._v(" "),t("h2",{attrs:{id:"原理分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[a._v("#")]),a._v(" 原理分析")]),a._v(" "),t("ol",[t("li",[a._v("首先要看的是 dom 和画布实现机制，也是通过 iframe 做的画布沙盒隔离")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662362484916-6bab826d-dc54-47fb-a034-92fa303163a1.png",alt:"image.png"}})]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("再看保存的数据结构，这一点特别有趣，它保存接口是 multidata ，也就是一组文件 + 文件描述。而文件描述跟文件内容没有直接关系，里面的字段主要还都是用于维护文件的，而这个 mL2pGg22T.tsx 文件文件里是什么呢？")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662362585139-f66f0bcf-5d62-4a41-bfc5-49e75f1e89a9.png",alt:"image.png"}}),a._v(" "),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662362592370-cd2c686d-90b5-444f-9561-b04445f629f5.png",alt:"image.png"}})]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("经过抓包，找到 *.tsx 源代码大概长这样，也就是可视化产生保存的文件是一个几乎完全可读的一个 react 文件，我往界面上拖放的组件实际上会生成这样一个 tsx 代码")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662363592226-07d4657b-b200-4f86-8781-61d9ac75a2e8.png",alt:"image.png"}})]),a._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[a._v("渲染过程：再进一步抓包，看到的页面顶级组件是类似这样一个结构")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662363755471-61d7c7f5-c571-4e93-ad1c-256817a94bdd.png",alt:"image.png"}}),a._v("\n找了一下 Text 的渲染，是一个基于 dangerHTML 的实现，位于核心库里\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662365307330-edca7f05-de1d-4adb-bf9a-dc3c274aa4ea.png",alt:"image.png"}}),a._v("\n旋转/反转组件\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662366451319-9fc4bdb6-d315-4366-9d57-e71cc864cbf9.png",alt:"image.png"}})]),a._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[a._v("tree.json")])]),a._v(" "),t("p",[a._v("从程序的角度看，不可能在可视化编辑动作的时候直接生成代码，中间必然存在一层数据模型层，这个数据其实就是在 tree.json 中存储了\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662369158893-be70c875-1b80-4763-b956-1e1812bb15de.png",alt:"image.png"}})]),a._v(" "),t("h2",{attrs:{id:"代码互转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码互转"}},[a._v("#")]),a._v(" 代码互转")]),a._v(" "),t("h3",{attrs:{id:"数据模型转组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据模型转组件"}},[a._v("#")]),a._v(" 数据模型转组件")]),a._v(" "),t("p",[a._v("在上面可以看到，tree.json 和 tsx 都描述了代码结构，两份数据必然是等效的，背后应该存在一套将数据模型转换成 tsx 的浏览器端实时编译的流程。这点跟 lowcode-engine 的出码应该有些类似。对此逻辑进一步 debug ，看到这样一个逻辑:")]),a._v(" "),t("ol",[t("li",[a._v("根据模板结构，拼接生成一份 tsx 文件")]),a._v(" "),t("li",[a._v("从 storeTree 取出文件名，对应页面的 json 信息 + 上一步生成的 typescript 文件，然后交给一个编译器")]),a._v(" "),t("li",[a._v("这个编辑器是通过 serviceworker 调用 wasm 来完成的，最终成成一份 code + map + meta 信息，产物是比较标准的。")])]),a._v(" "),t("p",[a._v("附上截图1：保存的 tsx 文件\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662371256508-2900e03f-0c18-45ff-9aff-31b17fbb4b19.png",alt:"image.png"}}),a._v("\n截图2：生成 tsx 文件的模板\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662371308302-d19c64ad-e065-44a5-9519-9058591bacbf.png",alt:"image.png"}}),a._v("\n截图3：tsx 交给 wasm 编译的入参和返回\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662371338476-4c30f8f1-54f2-4bc8-a015-1fe985997ae9.png",alt:"image.png"}}),a._v("\n截图4：treeStore 存储的文档节点信息传递给模板\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1662369855250-51e43e3b-bd17-45ea-a272-bf28088a0bf6.png",alt:"image.png"}})]),a._v(" "),t("h3",{attrs:{id:"framer-上创建-procode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#framer-上创建-procode"}},[a._v("#")]),a._v(" Framer 上创建 ProCode")]),a._v(" "),t("p",[t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663039138379-7d468d6f-26b6-4ead-ae5c-819be5646b03.png",alt:"image.png"}}),a._v(" "),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663039153701-1cc465cd-da8a-4156-b5a1-8f46b3df9b5b.png",alt:"image.png"}})]),a._v(" "),t("h2",{attrs:{id:"使用方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[a._v("#")]),a._v(" 使用方式")]),a._v(" "),t("h3",{attrs:{id:"平台上使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#平台上使用"}},[a._v("#")]),a._v(" 平台上使用")]),a._v(" "),t("p",[a._v("直接在编辑器上点击发布，会提供一个地址直接线上访问。同时这个平台支持多页面搭建&跳转\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663038244739-90c1f849-e274-423e-bba5-3426c3c00a5e.png",alt:"image.png"}}),a._v(" "),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663038282379-c04e74b3-6420-4ee8-9520-862295de0294.png",alt:"image.png"}})]),a._v(" "),t("h3",{attrs:{id:"组件化使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件化使用"}},[a._v("#")]),a._v(" 组件化使用")]),a._v(" "),t("p",[a._v("可以将部分在画布上绘制好的元素保存为组件，并拷贝到代码中使用\n"),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663038476306-b5e52610-791b-476e-8e9a-1cc85cbb35a5.png",alt:"image.png"}}),a._v(" "),t("img",{attrs:{src:"/yuque/0/2022/png/139763/1663038516088-7e41867e-2ac8-4e72-8a9a-1ed6e0e557ff.png",alt:"image.png"}}),a._v("\n点击 handshake ，可以得到一段可以直接使用的组件。它的代码类似这样：")]),a._v(" "),t("div",{staticClass:"language-typescript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" BeautifulImage "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://framer.com/m/BeautifulImage-AVFi.js@RGcB3arR7Pkz0eD6ikWC"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("BeautifulImage\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Using default values:")]),a._v("\n  image"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("这段类似 Deno 的 import ，目前仅支持 "),t("a",{attrs:{href:"https://nextjs.org/docs/api-reference/next.config.js/url-imports",target:"_blank",rel:"noopener noreferrer"}},[a._v("next.js "),t("OutboundLink")],1),a._v(", 不过这个看起来一个非常简单几行代码就能搞定的 webpack-loader 应该就能做到，找了一下还真有现成的"),t("a",{attrs:{href:"https://github.com/egoist/import-http/blob/master/lib/webpack.js#L36",target:"_blank",rel:"noopener noreferrer"}},[a._v(" import-http"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("framer 的功能和大体上的设计思路基本和其他低代码平台一致，强项在于绘制动画效果比较优秀，同时可以直接在上面写代码，又可以把它生成的组件在 pro-code 中使用，完全打通低代码(lowcode/nocode)设计和手写代码(procode)。实现了设计和手写代码的互通有无。\n")])])]),t("p",[a._v("而这个顺畅的转化过程，则实际上都即时（JIT）做了一层出码，将数据模型（tree）转 tsx（再转js）")])])}),[],!1,null,null,null);t.default=s.exports}}]);